import smtplib
from email.mime.text import MIMEText
import requests
import time
from lxml import etree
from qcloudsms_py import SmsMultiSender, SmsSingleSender
from qcloudsms_py.httpclient import HTTPError
from jpype import *
import json

class Info_warn(object):
    def __init__(self):
        # Inflation发送短信，程序终止
        self.Inflation_send = 0
        # 准备调用sikuli
        startJVM(r'C:\Program Files\Java\jdk1.8.0_301\jre\bin\server\jvm.dll', '-ea',
                 r'-Djava.class.path=D:\sikuli\sikulixapi-2.0.5-win.jar')
        Screen = JClass('org.sikuli.script.Screen')
        self.screen = Screen()
        self.time = 600
        self.update = "4,639"

    # 发送邮件配置
    def send_email(self, object, content):
        # 设置服务器所需信息
        # qq邮箱服务器地址
        mail_host = 'smtp.qq.com'
        # qq邮箱名
        mail_user = '****'
        # 邮箱授权码
        mail_pass = '****'
        # 邮件发送方
        sender = '2394830999@qq.com'
        # 邮件接收方
        receivers = ['1328420511@qq.com']
        # 设置email信息
        # 邮件内容设置
        message = MIMEText(content, 'plain', 'utf-8')
        # 邮件主题
        message['Subject'] = object
        # 发送方信息
        message['From'] = sender
        # 接收方信息
        message['To'] = receivers[0]
        # 登录并发送邮件
        try:
            smtpObj = smtplib.SMTP_SSL('smtp.qq.com', 465)
            # 连接到服务器
            smtpObj.connect(mail_host, 465)
            # 登录到服务器
            smtpObj.login(mail_user, mail_pass)
            # 发送
            smtpObj.sendmail(sender, receivers, message.as_string())
            # 退出
            smtpObj.quit()
            print('success')
        except smtplib.SMTPException as e:
            print('error', e)

    # 腾讯云配置
    def send_sms_single(self, phone_num, template_id, template_param_list):
        appid = '1400662528'
        appkey = '29a0a226ee1798ff1ceb3c7aaefa7225'
        sms_sign = 'polysms个人公众号'
        #print(appid, appkey, sms_sign)
        sender = SmsSingleSender(appid, appkey)
        try:
            response = sender.send_with_param(86, phone_num, template_id, template_param_list, sign=sms_sign)
        except HTTPError as e:
            response = {'result': 1000, 'errmsg': "网络异常发送失败"}
        return response


    def Inflation_warn(self):
        url_judge = 'https://www.cdc.gov/poxvirus/monkeypox/response/2022/us-map.html'
        try:
            text_judge = requests.get(url_judge, timeout=(60, 10)).content.decode("utf-8")
        except:
            print("网页加载太慢")
        else:
            html_judge = etree.HTML(text_judge)
            judge = html_judge.xpath('/html/body/div[2]/main/div[3]/div/div[3]/div/div/div[1]/div/p[1]/strong/span')[0].text.strip()
            print(judge)
            # 如果网页有更新，抓取最近aprrove，发送邮件
            if judge != self.update:
                self.update = judge
                print('发送邮件：猴痘数据已更新')
                update_time = time.strftime('%Y年%m月%d日%H:%M:%S')
                send_text = judge + "/" + update_time
                self.send_email('支持率', send_text)
                time.sleep(30)
                self.send_email('支持率', send_text)
                '''
                if float(approve) < 37.0:
                    print('发送短信：CPI已更新')
                    try:
                        self.send_sms_single(15852404763, 1369411, [approve])
                    except:
                        pass
                    else:
                        print('短信发送成功')
                '''


    def main(self):
        while 1:
            print(time.strftime('%Y年%m月%d日%H:%M:%S'))
            # 从 2022 年 3 月到 2022 年 4 月，美国的通胀率会超过 0.6%吗？
            self.Inflation_warn()

            time.sleep(self.time)


if __name__ == '__main__':
    warn = Info_warn()
    warn.main()





